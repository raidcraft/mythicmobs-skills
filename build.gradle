buildscript {
    repositories {
        jcenter()
        mavenCentral()
    }
}

plugins {
    id 'java'
    id 'jacoco'
    id 'idea'
    id 'io.freefair.lombok' version '5.3.0'
    id 'kr.entree.spigradle' version '2.2.4'
}

apply from: "$rootDir/gradle/jacoco.gradle"
apply from: "$rootDir/gradle/publish.gradle"

if (project.hasProperty("local_script")) {
    apply from: file(local_script + "/build.local.gradle")
}

sourceCompatibility = 11
targetCompatibility = 11

ext {
    mcVersion = project.property("mcVersion")
}

group project.property("group")

spigot {
    name = project.property("pluginName")
    authors = [project.property("author")]
    apiVersion = project.property("apiVersion")
    load = STARTUP
    depends = ['MythicMobs']
    //    softDepends = ['']
}

compileJava {
    options.encoding = 'UTF-8'
    options.compilerArgs += ["-parameters"]
    options.fork = true
    options.forkOptions.executable = 'javac'
}

archivesBaseName = project.property("pluginName")

repositories {
    mavenLocal()
    mavenCentral()
    jcenter()
    spigot()
    maven { url = "https://mvn.lumine.io/repository/maven-public/" }
}

dependencies {
    implementation spigot(mcVersion)

    implementation 'io.lumine.xikage:MythicMobs:4.9.1'

    testImplementation 'org.junit.jupiter:junit-jupiter:5.+'
    testImplementation "org.mockito:mockito-core:3.+"
    testImplementation 'org.assertj:assertj-core:3.+'
    testImplementation 'com.github.seeseemelk:MockBukkit-v1.16:0.20.0'
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
    ignoreFailures = false
}

processResources {
    project.properties.put("version", this.version)
    expand project.properties
}

defaultTasks 'build'
